// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proffy.RepositoryEF;

namespace Proffy.RepositoryEF.Migrations
{
    [DbContext(typeof(ProffyContext))]
    partial class ProffyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proffy.Business.POCO.Class", b =>
                {
                    b.Property<int>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost");

                    b.Property<string>("Subject");

                    b.Property<int>("UserID");

                    b.HasKey("ClassID");

                    b.HasIndex("UserID");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("Proffy.Business.POCO.ClassSchedule", b =>
                {
                    b.Property<int>("ClassScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassID");

                    b.Property<int>("From");

                    b.Property<int>("To");

                    b.Property<int>("WeekDay");

                    b.HasKey("ClassScheduleID");

                    b.HasIndex("ClassID");

                    b.ToTable("ClassSchedule");
                });

            modelBuilder.Entity("Proffy.Business.POCO.Connection", b =>
                {
                    b.Property<int>("ConnectionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("UserID");

                    b.HasKey("ConnectionID");

                    b.HasIndex("UserID");

                    b.ToTable("Connection");
                });

            modelBuilder.Entity("Proffy.Business.POCO.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<string>("Bio");

                    b.Property<string>("Name");

                    b.Property<string>("WhatsApp");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Proffy.Business.POCO.Class", b =>
                {
                    b.HasOne("Proffy.Business.POCO.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proffy.Business.POCO.ClassSchedule", b =>
                {
                    b.HasOne("Proffy.Business.POCO.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Proffy.Business.POCO.Connection", b =>
                {
                    b.HasOne("Proffy.Business.POCO.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
